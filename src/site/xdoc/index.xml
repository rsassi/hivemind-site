<?xml version="1.0"?>
<document>
    <properties>
        <title>Welcome to HiveMind</title>
        <author email="ahuegen@apache.org">Achim Huegen</author>
    </properties>
    <body>
        <section name="Welcome to HiveMind">

            <div id="downloadbox">
                <h5>Get HiveMind 1.1.1</h5>
                <p>
                    <a href="download.html">
                        <img valign="top" src="images/folder-open.gif" border="0" alt="" title="download"/> Download
                    </a> HiveMind 1.1.1 </p>

                <br/>

                <!-- Leave the last few news items here -->

                <h5>New!</h5>
                <ul style="list-style:none">
                    <li><a href="news.html#New Site">New Site</a></li>
                    <li><a href="news.html#HiveMind - Now Top Level">HiveMind - Now Top Level Project</a></li>
                </ul>
                
            </div>
            <p><strong>HiveMind</strong> is a services and configuration microkernel:</p>
							<ul>
								<li><strong>Services</strong>: HiveMind
									services are <em>POJOs</em> (Plain Old Java Objects) that can be easily
									accessed and combined. Each service ideally defines a Java interface it
									implements (but this is no longer mandatory). HiveMind takes care of instantiating and configuring each
									service just as necessary. HiveMind lets services collaborate with each
									other via dependency injection.</li>
								<li> <strong>Configuration</strong>: 
									HiveMind allows you to provide complex configuration data to your
									services in a format <em>you</em> define. HiveMind will integrate the
									contributions of such data from multiple modules and convert it all into
									data objects for you. HiveMind configurations allow for powerful,
									data-driven solutions which combine seemlessly with the service
									architecture.</li>
							</ul>
							<p>In HiveMind, a service is an implementation of a Java interface. Unlike
								other SOAs (Service Oriented Architectures, such as a SOAP, or EJBs),
								HiveMind is explicitly about combining Java code within a single JVM.
								HiveMind uses a descriptor to describe
								different services, their lifecycles, and how they are combined. HiveMind
								takes care of thread-safe, just-in-time creation of singleton service
								objects so your code doesn't have to.</p>
        </section>

        <section name="Related projects and HiveMind Extensions">

            <p> This section lists related projects and HiveMind extensions that have been created by third parties. </p>

            <table>
                <tr>
                    <td>
                        <a href="http://tapestry.apache.org">Tapestry</a>
                    </td>
                    <td> Web framework that uses HiveMind under the covers. </td>
                </tr>
                <tr>
                    <td>
                        <a href="http://hivetranse.sourceforge.net">HiveMind Utilities</a>
                    </td>
                    <td>
                       Repository of HiveMind extensions for the support of transaction handling, security, remoting, events and rich clients.
                    </td>
                </tr>
                <tr>
                    <td>
                        <a href="http://crispy.sourceforge.net">Crispy</a>
                    </td>
                    <td>Client for Remote Invocation for different kinds of services via proxies.
                       Offers an extension for the invocation of HiveMind services.</td>
                </tr>
                <tr>
                    <td>
                        <a href="http://mule.codehaus.org">Mule</a>
                    </td>
                    <td>Enterprise Service Bus (ESB) messaging framework that supports HiveMind as object container.</td>
                </tr>
            </table>
        </section>

    </body>
</document>
